"""
Django settings for homeflix project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
from decouple import config
from dotenv import load_dotenv
from dj_database_url import parse as dburl

# Definir o caminho do projeto
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# Chave de segurança do projeto
# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = config('SECRET_KEY')
SECRET_KEY = os.getenv("SECRET_KEY")

# Permite que qualquer mudança feita reflita no navegador
#   (DEBUG = True, alterações instantâneas)
#   (DEBUG = False, necessário pausar o servidor e implementar as alterações)
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True   # Mantem a segurança do projeto enquanto 'True', mas para deploy é necessário altera-lo para 'False'
DEBUG = config('DEBUG', default=False,
               cast=bool)  # Mantem a segurança do projeto enquanto 'True', mas para deploy é necessário altera-lo para 'False#'
TEMPLATE_DEBUG = DEBUG

# HOST permitidos
# ALLOWED_HOSTS = []  # Informa quais os sites que poderão acessar a página
ALLOWED_HOSTS = ['127.0.0.1:8000', '127.0.0.1',
                 'homeflixapp.herokuapp.com']  # Informa quais os sites que poderão acessar a página

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'filme',
    'crispy_forms',
    'crispy_bootstrap5',
    'cloudinary_storage',
    'cloudinary',
]

# Processo de meio de caminhos (token csrf, por exemplo)
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Arquivo que contém a base dos links (quem comanda as urls)
ROOT_URLCONF = 'homeflix.urls'

# Onde os arquivos HTMLs ficarão
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        # Diretório 'templates' na raiz do projeto, que armazenará as configurações padrões das demais páginas
        'APP_DIRS': True,  # Diretório 'templates' dentro do app do projeto
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # Extrair informações do usuário
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'filme.novos_context.lista_filmes_recentes',
                'filme.novos_context.lista_filmes_populares',
                'filme.novos_context.filme_destaque',
            ],
        },
    },
]

# Configuração de servidor
WSGI_APPLICATION = 'homeflix.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# Banco de Dados padrão
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

default_dburl = 'sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3')

DATABASES = {
    'default': config('DATABASE_URL', default=default_dburl, cast=dburl),
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

# Validadores de senha que o django gerencia
# Informar para o django que foi criado um novo padrão de usuário
AUTH_USER_MODEL = "filme.Usuario"  # (App 'filme' e classe 'Usuario')
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # Mínimo de caracteres
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        # Não permite senhas comuns (ex. '123456')
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        # Não permite senha somente numérica
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

# Idioma do admin do django
LANGUAGE_CODE = 'pt-br'

# Fuso horário
TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True

# Onde ficarão os arquivos HTML, CSS e JS
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# Diretório para o administrativo fazer upload de arquivos de midia

STATIC_ROOT = BASE_DIR / "staticfiles"

STATIC_URL = 'static/'  # nome do link

# Diretório onde ficarão as imagens
STATICFILES_DIRS = [
    BASE_DIR / "static"  # Nome do diretório
]

# Diretório para o usuário fazer o upload de arquivos de midia
MEDIA_URL = 'media/'  # nome do link

MEDIA_ROOT = BASE_DIR / "media"  # Nome do diretório

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

# Chave primária do banco de dados
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Link que o usuário será redirecionado quando fizer o login
LOGIN_REDIRECT_URL = 'filme:homefilmes'  # Forma como a URL deve ser passada para o python

# Pagina de login
LOGIN_URL = 'filme:login'

CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'

CRISPY_TEMPLATE_PACK = 'bootstrap5'

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv("CLOUD_NAME"),
    'API_KEY': os.getenv("API_KEY"),
    'API_SECRET': os.getenv("API_SECRET")
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
